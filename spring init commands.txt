Generating spring skeleton commands:

1.-
spring init \
--boot-version=3.1.3 \
--build=gradle \
--type=gradle-project \
--java-version=17 \
--packaging=jar \
--name=product-service \
--package-name=se.magnus.microservices.core.product \
--groupId=se.magnus.microservices.core.product \
--dependencies=actuator,webflux \
--version=1.0.0-SNAPSHOT \
product-service

2.-
spring init \
--boot-version=3.1.3 \
--build=gradle \
--type=gradle-project \
--java-version=17 \
--packaging=jar \
--name=review-service \
--package-name=se.magnus.microservices.core.review \
--groupId=se.magnus.microservices.core.review \
--dependencies=actuator,webflux \
--version=1.0.0-SNAPSHOT \
review-service

spring init \
--boot-version=3.1.3 \
--build=gradle \
--type=gradle-project \
--java-version=17 \
--packaging=jar \
--name=recommendation-service \
--package-name=se.magnus.microservices.core.recommendation \
--groupId=se.magnus.microservices.core.recommendation \
--dependencies=actuator,webflux \
--version=1.0.0-SNAPSHOT \
recommendation-service

spring init \
--boot-version=3.1.3 \
--build=gradle \
--type=gradle-project \
--java-version=17 \
--packaging=jar \
--name=product-composite-service \
--package-name=se.magnus.microservices.composite.product \
--groupId=se.magnus.microservices.composite.product \
--dependencies=actuator,webflux \
--version=1.0.0-SNAPSHOT \
product-composite-service

Running the microservices as background process:

java -jar microservices/product-composite-service/build/libs/product-composite-service-1.0.0-SNAPSHOT.jar se.magnus.microservices.composite.product.ProductCompositeServiceApplication &
java -jar microservices/product-service/build/libs/product-service-1.0.0-SNAPSHOT.jar se.magnus.microservices.core.product.ProductServiceApplication &
java -jar microservices/recommendation-service/build/libs/recommendation-service-1.0.0-SNAPSHOT.jar se.magnus.microservices.core.recommendation.RecommendationServiceApplication &
java -jar microservices/review-service/build/libs/review-service-1.0.0-SNAPSHOT.jar se.magnus.microservices.core.review.ReviewServiceApplication &

Testing the endpoints:

curl http://localhost:7000/product-composite/1 | jq .

Verify that a 404 (Not Found) error is returned for a non-existing productId (13)

curl http://localhost:7000/product-composite/13 -i

Verify that no recommendations are returned for productId 113

curl http://localhost:7000/product-composite/113 -s | jq .

Verify that no reciewws are returned for productId 213

curl http://localhost:7000/product-composite/213 -s | jq .

Verify that a 422 (Unprocessable Entity) error is returned for a productId that is out of range (-1)

curl http://localhost:7000/product-composite/-1 -i

Verify that a 400 (Bad Request) error is returned for a productId that is not a number, i.e. invalid format

curl http://localhost:7000/product-composite/invalidProductId -i

Shut down the microservices:

kill $(jobs -p)

Before run docker-compose enable colima:
colima start --memory 4

List topics from kafka:

docker-compose exec kafka /bin/kafka-topics --bootstrap-server=localhost:9092 --list

To see the partitions:

docker-compose exec kafka /bin/kafka-topics --bootstrap-server=localhost:9092 --describe --topic products

To see all the messages in a specific topic:

docker-compose exec kafka /bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic products --from-beginning --timeout-ms 6000

To see all the messages in a specific partition:

docker-compose exec kafka /bin/kafka-console-consumer --bootstrap-server localhost:9092 --topic products --from-beginning --timeout-ms 6000 --partition 1

When message:
! Network microservices-product-landscape_default                Resource is still in use

docker-compose down --remove-orphans





